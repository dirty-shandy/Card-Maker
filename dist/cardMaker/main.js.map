{"version":3,"sources":["./src/app/card-service.service.ts","./src/environments/environment.ts","./src/app/card-editor/card-editor.component.ts","./src/app/card-editor/card-editor.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/card-view/card-view.component.ts","./src/app/card-view/card-view.component.html","./src/app/cards-list/cards-list.component.html","./src/app/cards-list/cards-list.component.ts","./src/app/update-card/update-card.component.ts","./src/app/update-card/update-card.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,MAAM,kBAAkB;IAG7B,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrC,QAAG,GAAE,6BAA6B;IAEM,CAAC;IAEzC,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;IACvC,CAAC;IAED,UAAU,CAAC,EAAE;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,cAAc,CAAC,EAAE;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,EAAE,EAAE,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,EAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,kBAAkB,CAAC,EAAE;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACxD,CAAC;;oFA3BU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAHjB,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACbnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;ICavD,0EACE;IAAA,6EAAgF;IAAxE,wTAAsB;IAAkD,iEAAO;IAAA,4DAAS;IAChG,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IAAC,kGAC5B;IAAA,4DAAM;;ADRD,MAAM,mBAAmB;IAe9B,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;QAbnD,UAAK,GAAY,KAAK,CAAC;QAEvB,YAAO,GAAG,IAAI,wDAAS,CAAE;YACvB,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACxB,CAAC;IAEqD,CAAC;IAExD,QAAQ,KAAW,CAAC;IAEpB,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YAChE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;;sFA5BU,mBAAmB;mGAAnB,mBAAmB;QCThC,0EACA;QAAA,uEACE;QAAA,qEACA;QAAA,qEACA;QAAA,qEACA;QAGF,4DAAO;QACP,uEAEA;QAAA,yEACE;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAEvB,+GAGM;QAEN,2EACE;QAD0B,gJAAY,iBAAa,IAAC;QACpD,0EACE;QAAA,4EAAqB;QAAA,oEAAQ;QAAA,4DAAQ;QACrC,uEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4DAAQ;QAC7C,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAwB;QAAA,wEAAY;QAAA,4DAAQ;QAC5C,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,sEAAU;QAAA,4DAAQ;QACxC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAoB;QAAA,oEAAQ;QAAA,4DAAQ;QACpC,wEACF;QAAA,4DAAM;QAGN,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAAC,oEAC9D;QAAA,8EAA8C;QAAA,mEAAO;QAAA,4DAAS;QAChE,4DAAO;QACP,iEACA;QAAA,yEAAoC;QAAA,wEAAY;QAAA,4DAAI;QACtD,4DAAM;QAGN,4DAAO;QACP,4DAAO;;QA7CC,0DAAW;QAAX,2EAAW;QAKX,0DAAqB;QAArB,kFAAqB;;;;;;;;;;;;;;;;;;;;ACbtB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,0EACA;QAAA,uEACE;QAAA,qEACA;QAAA,qEACA;QAAA,qEACA;QAGF,4DAAO;QACP,uEAEE;QAAA,2EAA+B;QAEjC,4DAAO;QACP,4DAAO;;;;;;;;;;;;;;ACfP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAGF;AACT;AAC2B;AACH;AACH;AACvB;AACQ;AACG;AACkB;AACnB;AACI;AACoB;;AA0BxE,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YAXJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,kEAAmB;YACnB,oEAAa;YACb,6FAAuB;YACvB,yEAAe;SAEhB;oIAIU,SAAS,mBApBlB,2DAAY;QACZ,sFAAmB;QACnB,mFAAkB;QAClB,gFAAiB;QACjB,sFAAmB,aAGnB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;QAChB,kEAAmB;QACnB,oEAAa;QACb,6FAAuB;QACvB,yEAAe;;;;;;;;;;;;;;;;;;;;;ACtBZ,MAAM,iBAAiB;IAG5B,YAAoB,QAA4B,EAAU,MAAsB;QAA5D,aAAQ,GAAR,QAAQ,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAgB;QAFhF,cAAS,GAAQ,EAAE,CAAC;IAEgE,CAAC;IAErF,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAC,EAAE;YAC9E,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;;kFAVU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEACI;QAAA,yEACE;QAAA,qEAAI;QAAA,uDAAgC;QAAA,4DAAK;QAEzC,yEACA;QAAA,wEAAuB;QAAA,uDAAmB;QAAA,4DAAK;QAC/C,oEAAgD;QAAA,gEAChD;QAAA,kEAA+B;QAC/B,wEAAqB;QAAA,wDAAmB;QAAA,4DAAI;QAC5C,4DAAM;QACR,4DAAM;QACN,wEAAoC;QAAA,wEAAY;QAAA,4DAAI;QACxD,4DAAM;;QAVI,0DAAgC;QAAhC,0GAAgC;QAGb,0DAAmB;QAAnB,oFAAmB;QACrC,0DAA2B;QAA3B,8JAA2B;QAEX,0DAAmB;QAAnB,oFAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;ICc1C,wEACE;IAAA,wEAAiD;IAAA,uEAAM;IAAA,uDAAc;IAAA,4DAAO;IAAA,4DAAI;IAChF,0EAEE;IAAA,wEACE;IAAA,6EAAqD;IAAA,kEAAO;IAAA,4DAAS;IAAA,4DAAI;IAC3E,6EAAkF;IAA9B,gWAA6B;IAAC,4DAAC;IAAA,4DAAS;IAAA,mEAC9F;IAAA,4DAAM;IACR,4DAAK;;;IAPA,0DAA6C;IAA7C,2HAA6C;IAAO,0DAAc;IAAd,8EAAc;IAGhE,0DAA2C;IAA3C,yHAA2C;;ACjB/C,MAAM,kBAAkB;IAG7B,YAAoB,QAA4B;QAA5B,aAAQ,GAAR,QAAQ,CAAoB;QAFhD,cAAS,GAAQ,EAAE,CAAC;IAEgC,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;;oFAjBU,kBAAkB;kGAAlB,kBAAkB;QDR/B,0EACA;QAAA,uEACE;QAAA,qEACA;QAAA,qEACA;QAAA,qEACA;QAGF,4DAAO;QACP,uEAEA;QAAA,yEACA;QAAA,uEACE;QAAA,4EAA8C;QAAA,qEAAU;QAAA,4DAAS;QAAA,4DAAI;QACrE,iEACA;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,iEACF;QAAA,4DAAM;QAEN,0EACE;QAAA,yEACE;QAAA,+GAQK;QACP,4DAAK;QAEP,4DAAM;QAEN,4DAAO;QACP,4DAAO;;QAd0C,2DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;AEpB7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;ICavD,0EACE;IAAA,6EAAgF;IAAxE,wTAAsB;IAAkD,iEAAO;IAAA,4DAAS;IAChG,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IAAC,oGAC5B;IAAA,4DAAM;;ADRD,MAAM,mBAAmB;IAe9B,YAAoB,WAA+B,EAAU,MAAsB;QAA/D,gBAAW,GAAX,WAAW,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAgB;QAbnF,UAAK,GAAY,KAAK,CAAC;QAEvB,aAAQ,GAAG,IAAI,wDAAS,CAAE;YACxB,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACxB,CAAC;IAEqF,CAAC;IAExF,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YAChF,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAE;gBAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC3C,KAAK,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACvC,WAAW,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACnD,KAAK,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACvC,UAAU,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC7C,MAAM,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACzC,EAAE,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACxC,CAAC;QACA,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE,CACrG,IAAI,CAAC,KAAK,GAAG,IAAI,CAChB,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;;sFA3CU,mBAAmB;mGAAnB,mBAAmB;QCThC,0EACA;QAAA,uEACE;QAAA,qEACA;QAAA,qEACA;QAAA,qEACA;QAGF,4DAAO;QACP,uEAEA;QAAA,yEACE;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAEvB,+GAGM;QAEN,2EACE;QAD2B,gJAAY,iBAAa,IAAC;QACrD,0EACE;QAAA,4EAAqB;QAAA,oEAAQ;QAAA,4DAAQ;QACrC,uEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4DAAQ;QAC7C,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAwB;QAAA,wEAAY;QAAA,4DAAQ;QAC5C,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,sEAAU;QAAA,4DAAQ;QACxC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAoB;QAAA,oEAAQ;QAAA,4DAAQ;QACpC,wEACF;QAAA,4DAAM;QAGN,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAAC,oEAC9D;QAAA,yEACE;QAAA,8EAA8C;QAAA,mEAAO;QAAA,4DAAS;QAAA,4DAAI;QACtE,4DAAO;QACP,iEACA;QAAA,yEAAoC;QAAA,wEAAY;QAAA,4DAAI;QACtD,4DAAM;QAIN,4DAAO;QACP,4DAAO;;QA/CC,0DAAW;QAAX,2EAAW;QAKX,0DAAsB;QAAtB,mFAAsB;;;;;;;;;;;;;;ACnB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACmB;AACH;AACG;AACN;;;AAEpE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAI,UAAU,EAAE,qBAAqB,EAAE,SAAS,EAAE,MAAM,EAAE;IACnE,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,sFAAmB,EAAC;IAC7D,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,mFAAkB,EAAC;IAC3D,EAAC,IAAI,EAAE,yBAAyB,EAAE,SAAS,EAAE,sFAAmB,EAAC;IACjE,EAAC,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,gFAAiB,EAAC;CAC9D,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE,CAAC,CAAC,EACnE,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACjBuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CardServiceService {\n  url= \"http://localhost:3000/cards\"\n\n  constructor (private http: HttpClient) {}\n\n  getCards(){\n    return this.http.get(this.url);\n  }\n\n  saveCard(data) {\n    return this.http.post(this.url, data)\n  }\n\n  deleteCard(id) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n\n  getCurrentCard(id) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n\n  updateCard(id, data){\n    return this.http.put(`${this.url}/${id}`,data);\n  }\n\n  getViewCurrentCard(id) {\n    return this.http.get(`${this.url}/${id}`).toPromise();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { CardServiceService } from '../card-service.service'\nimport { FormGroup, FormControl  } from '@angular/forms';\nimport { CardViewComponent } from '../card-view/card-view.component';\n\n@Component({\n  selector: 'app-card-editor',\n  templateUrl: 'card-editor.component.html',\n  styleUrls: ['card-editor.component.css']\n})\nexport class CardEditorComponent implements OnInit {\n\n  alert: boolean = false;\n\n  addCard = new FormGroup ({\n    logoUrl: new FormControl(''),\n    Title: new FormControl(''),\n    Description: new FormControl(''),\n    Email: new FormControl(''),\n    PropertyID: new FormControl(''),\n    WidgetID: new FormControl(''),\n    APIKey: new FormControl(''),\n    id: new FormControl('')\n  })\n\n  constructor(private cardService: CardServiceService) { }\n\n  ngOnInit(): void { }\n\n  collectCard() {\n    this.cardService.saveCard(this.addCard.value).subscribe((result)=>{\n      this.alert = true;\n      this.addCard.reset({});\n    });\n  }\n\n  closeAlert() {\n    this.alert = false;\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n<div class=\"container\">\n  <h2>Vii Card Maker</h2>\n\n  <div *ngIf=\"alert\" class=\"alert alert-success alert-dismissible fade show\">\n    <button (click)=\"closeAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n    <strong>Success!</strong> The card has been added successfully!\n  </div>\n\n  <form [formGroup]=\"addCard\" (ngSubmit)=\"collectCard()\">\n    <div class=\"form-group\" >\n      <label for=\"logoURL\">Logo URL</label>\n      <input type=\"file\" class=\"form-control-file border\" id=\"logoURL\" name=\"logoURL\" formControlName=\"logoUrl\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"Title\">Title:</label>\n      <input type=\"text\" formControlName=\"Title\" class=\"form-control\" id=\"Title\" name=\"Title\" >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"Description\">Description:</label>\n      <input type=\"text\" formControlName=\"Description\" class=\"form-control\" id=\"Description\" name=\"Description\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"Email\">Email:</label>\n      <input type=\"email\" formControlName=\"Email\" class=\"form-control\" id=\"Email\" name=\"Email\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"PropertyID\">Property ID:</label>\n      <input type=\"text\" formControlName=\"PropertyID\" class=\"form-control\" id=\"PropertyID\" name=\"PropertyID\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"WidgetID\">Widget ID:</label>\n      <input type=\"text\" formControlName=\"WidgetID\" class=\"form-control\" id=\"WidgetID\" name=\"WidgetID\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"APIKey\">API Key:</label>\n      <input type=\"text\" formControlName=\"APIKey\" class=\"form-control\" id=\"APIKey\" name=\"APIKey\">\n    </div>\n\n\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;\n    <button type=\"button\" class=\"btn btn-primary\">Preview</button>\n  </form>\n  <br>\n  <a routerLink=\"/CardsListComponent\">Back to List</a>\n</div>\n\n\n</body>\n</html>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n  title = 'cardMaker';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n  <router-outlet></router-outlet>\n\n</body>\n</html>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardEditorComponent } from './card-editor/card-editor.component';\nimport { CardsListComponent } from './cards-list/cards-list.component';\nimport { CardViewComponent } from './card-view/card-view.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateCardComponent } from './update-card/update-card.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardEditorComponent,\n    CardsListComponent,\n    CardViewComponent,\n    UpdateCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    MatButtonModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CardEditorComponent } from '../card-editor/card-editor.component';\nimport { CardServiceService } from '../card-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-card-view',\n  templateUrl: './card-view.component.html',\n  styleUrls: ['./card-view.component.css']\n})\nexport class CardViewComponent implements OnInit {\n  colection: any = [];\n\n  constructor(private cardList: CardServiceService, private router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.cardList.getViewCurrentCard(this.router.snapshot.params.id).then((result)=>{\n      this.colection = result;\n      console.log(result)\n    })\n  }\n}\n\n\n","<div class=\"container\">\n    <div class=\"card\">\n      <h1>Card Title - {{colection.Title}}</h1>\n\n      <div class=\"card-body\" class=\"list-group-item\">\n      <h3 class=\"card-title\">{{colection.Title}}</h3>\n      <img src=\"{{colection.logoUrl}}\" height=\"300px\"><hr>\n      <i class=\"fas fa-envelope\"></i>\n      <p class=\"card-text\">{{colection.Email}}</p>\n      </div>\n    </div>\n    <a routerLink=\"/CardsListComponent\">Back to List</a>\n</div>\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n<div class=\"container\">\n<a routerLink=\"/CardEditorComponent\">\n  <button type=\"button\" class=\"btn btn-primary\">Create New</button></a>\n  <hr>\n  <h3>Card Title</h3>\n  <hr>\n</div>\n\n<div class=\"container\">\n  <ul class=\"list-group list-group-flush\" >\n    <li class=\"list-group-item\" *ngFor=\"let card of colection\">\n      <a routerLink=\"/UpdateCardComponent/{{card.id}}\"><span>{{card.Title}}</span></a>\n      <div class=\"button\">\n        \n        <a routerLink=\"/CardViewComponent/{{card.id}}\">\n          <button type=\"button\" class=\"btn btn-primary btn-sm\">Preview</button></a>\n        <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"deleteCard(card.id)\">X</button>&nbsp;\n      </div>\n    </li>\n  </ul>\n\n</div>\n\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { CardServiceService } from '../card-service.service';\n\n@Component({\n  selector: 'app-cards-list',\n  templateUrl: './cards-list.component.html',\n  styleUrls: ['./cards-list.component.css']\n})\n\nexport class CardsListComponent implements OnInit {\n  colection: any = [];\n\n  constructor(private cardList: CardServiceService) { }\n\n  ngOnInit(): void {\n    this.cardList.getCards().subscribe((result)=>{\n       console.log(result)\n       this.colection = result;\n    })\n  }\n\n  deleteCard(card) {\n    this.colection.splice(card.id,1);\n    this.cardList.deleteCard(card).subscribe((result)=> {\n      console.log(\"result\", result);\n    })\n  }\n\n}\n//json-server --watch db.json\n","import { Component, OnInit } from '@angular/core';\nimport { CardServiceService } from '../card-service.service'\nimport { FormGroup, FormControl  } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-update-card',\n  templateUrl: './update-card.component.html',\n  styleUrls: ['./update-card.component.css']\n})\nexport class UpdateCardComponent implements OnInit {\n\n  alert: boolean = false;\n\n  editCard = new FormGroup ({\n    logoUrl: new FormControl(''),\n    Title: new FormControl(''),\n    Description: new FormControl(''),\n    Email: new FormControl(''),\n    PropertyID: new FormControl(''),\n    WidgetID: new FormControl(''),\n    APIKey: new FormControl(''),\n    id: new FormControl('')\n  })\n\n  constructor(private cardService: CardServiceService, private router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.router.snapshot.params.id);\n    this.cardService.getCurrentCard(this.router.snapshot.params.id).subscribe((result)=> {\n        this.editCard = new FormGroup ({\n          logoUrl: new FormControl(result['logoUrl']),\n          Title: new FormControl(result['Title']),\n          Description: new FormControl(result['Description']),\n          Email: new FormControl(result['Email']),\n          PropertyID: new FormControl(result['PropertyID']),\n          WidgetID: new FormControl(result['WidgetID']),\n          APIKey: new FormControl(result['APIKey']),\n          id: new FormControl(result['id'])\n  })\n    })\n    console.log(this.router.snapshot.params.id);\n  }\n\n  collectCard() {\n    console.log(this.editCard.value);\n    this.cardService.updateCard(this.router.snapshot.params.id, this.editCard.value).subscribe((result)=>\n    this.alert = true\n    );\n  }\n\n  closeAlert() {\n    this.alert = false;\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n<div class=\"container\">\n  <h2>Vii Card Maker</h2>\n\n  <div *ngIf=\"alert\" class=\"alert alert-success alert-dismissible fade show\">\n    <button (click)=\"closeAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n    <strong>Success!</strong> The card has been updated successfully!\n  </div>\n\n  <form [formGroup]=\"editCard\" (ngSubmit)=\"collectCard()\">\n    <div class=\"form-group\" >\n      <label for=\"logoURL\">Logo URL</label>\n      <input type=\"file\" class=\"form-control-file border\" id=\"logoURL\" name=\"logoURL\" formControlName=\"logoUrl\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"Title\">Title:</label>\n      <input type=\"text\" formControlName=\"Title\" class=\"form-control\" id=\"Title\" name=\"Title\" >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"Description\">Description:</label>\n      <input type=\"text\" formControlName=\"Description\" class=\"form-control\" id=\"Description\" name=\"Description\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"Email\">Email:</label>\n      <input type=\"email\" formControlName=\"Email\" class=\"form-control\" id=\"Email\" name=\"Email\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"PropertyID\">Property ID:</label>\n      <input type=\"text\" formControlName=\"PropertyID\" class=\"form-control\" id=\"PropertyID\" name=\"PropertyID\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"WidgetID\">Widget ID:</label>\n      <input type=\"text\" formControlName=\"WidgetID\" class=\"form-control\" id=\"WidgetID\" name=\"WidgetID\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"APIKey\">API Key:</label>\n      <input type=\"text\" formControlName=\"APIKey\" class=\"form-control\" id=\"APIKey\" name=\"APIKey\">\n    </div>\n\n\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;\n    <a routerLink=\"/CardViewComponent/:id\">\n      <button type=\"button\" class=\"btn btn-primary\">Preview</button></a>\n  </form>\n  <br>\n  <a routerLink=\"/CardsListComponent\">Back to List</a>\n</div>\n\n\n\n</body>\n</html>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardEditorComponent } from './card-editor/card-editor.component';\nimport { CardsListComponent } from './cards-list/cards-list.component';\nimport { UpdateCardComponent } from './update-card/update-card.component';\nimport { CardViewComponent } from './card-view/card-view.component';\n\nconst routes: Routes = [\n  {path: '',   redirectTo: '/CardsListComponent', pathMatch: 'full' },\n  {path: 'CardEditorComponent', component: CardEditorComponent},\n  {path: 'CardsListComponent', component: CardsListComponent},\n  {path: 'UpdateCardComponent/:id', component: UpdateCardComponent},\n  {path: 'CardViewComponent/:id', component: CardViewComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}